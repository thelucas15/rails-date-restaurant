exit
continue
@users
continue
@restaurants.val
@restaurants.count
@restaurants
@restaurant
params
continue
@user_location_requested
continue
@user_location_requested
params
continue
params
c
params
continue
params
continue
params
continue
Restaurant.near([38.732656999999996, -9.1421262],10).each{|a| puts a.address}
Restaurant.near([38.732656999999996, -9.1421262],10).join
Restaurant.near([38.732656999999996, -9.1421262],10)[0].address
Restaurant.near([38.732656999999996, -9.1421262],10)[0]
Restaurant.near([38.732656999999996, -9.1421262],10).values
Restaurant.near([38.732656999999996, -9.1421262],10).many?
Restaurant.near([38.732656999999996, -9.1421262],10).class
Restaurant.near([38.732656999999996, -9.1421262],10).count
Restaurant.near([38.732656999999996, -9.1421262],10)
Restaurant.near([38.732656999999996, -9.1421262],10).class
Restaurant.near([38.732656999999996, -9.1421262],10).count
Restaurant.near([38.732656999999996, -9.1421262],10).all
Restaurant.near([38.732656999999996, -9.1421262],10)
@food_type
@foodtype
@restaurants = policy_scope(Restaurant).where(food_type: @foodtype)
exit
next
